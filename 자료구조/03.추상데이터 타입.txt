추상 데이터 타입(Abstract Data Type : ADT)
데이터(data)란 : 프로그램에서 처리의 대상이 되는 모든 것.
데이터 타입(data type)이란 : 데이터의 집합과 이러한 데이터에 적용할 수 있는 연산의 집합
추상화란 : 어떤 시스템의 간략화된 기술 또는 명세로서 시스템의 핵심적인 구조나 동작에 집중(중요한 정보는 강조, 중요하지 않는 세부사항은 제거)
추상 데이터 타입이란 : 새로운 데이터 타입을 추상적으로 정의한 것.
->자료구조(data structure)는 이러한 추상 데이터 타입을 프로그래밍 언어로 구현한 것.

특징
1.사용자와 구현자의 관점을 분리
2.사용자는 추상 자료형 내부의 데이터에 접근할 수는 없지만 사용 가능
3.사용자는 추상 자료형이 제공하는 연산만 사용 가능
4.사용자는 추상 자료형 사용법 숙지

장점
1.정보 은닉
2.새로운 타입 정의 ex)프레임워크, 라이브러리


알고리즘의 성능 분석
필요성
-요즘 컴퓨터는 예전에 비해 계산속도와 방대한 메모리를 자랑한다. 하지만
최근 상용 프로그램의 규모가 이전에 비해 엄청나게 커지고 있기 때문에 (즉 처리해야 할 자료의 양이 많다) 알고리즘의 효율성이 더욱 중요하게 된다. 또한 경쟁사 보다 빨라야 경쟁에서 이길수 있다.

알고리즘 복잡도 분석방법
- 시간복잡도(실행 시간 분석)와 공간복잡도(기억 공간 분석)이 있다.
  (우리가 알고리즘의 복잡도를 이야기할 때 대개는 시간 복잡도를 말한다->메모리 공간보단 실행시간에 더 관심이 있기 때문)
- 빅오 표기법 : 시간 복잡도 함수에서 불필요한 정보를 제거하여 알고리즘 분석을 쉽게 할 목적으로 시간 복잡도를 표시하는 방법(차수가 가장 큰 항이 전체의 값을 주도)
-  최선, 평균, 최악의 경우 : 최악의 경우의 실행 시간이 알고리즘의 시간 복잡도 척도로 많이 쓰인다.


자료구조 표기법
-이름 짓기
 1.상수 : 상수는 전체를 대문자로 표기
 2.변수 : 소문자를 사용하며 언더라인(_)을 사용하여 단어와 단어를 분리
 3.함수 : 동사를 이용하여 함수가 하는 작업을 표기